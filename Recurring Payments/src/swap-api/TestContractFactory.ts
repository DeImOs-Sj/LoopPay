/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.94.8
*/

import { Contract, ContractFactory, decompressBytecode } from "fuels";
import type { Provider, Account, DeployContractOptions, DeployContractResult } from "fuels";

import { TestContract } from "./TestContract";

const bytecode = decompressBytecode("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");

export class TestContractFactory extends ContractFactory {

  static readonly bytecode = bytecode;

  constructor(accountOrProvider: Account | Provider) {
    super(bytecode, TestContract.abi, accountOrProvider);
  }

  deploy<TContract extends Contract = Contract>(
    deployOptions?: DeployContractOptions
  ): Promise<DeployContractResult<TContract>> {
    return super.deploy({
      storageSlots: TestContract.storageSlots,
      ...deployOptions,
    });
  }

  static async deploy (
    wallet: Account,
    options: DeployContractOptions = {}
  ): Promise<DeployContractResult<TestContract>> {
    const factory = new TestContractFactory(wallet);
    return factory.deploy(options);
  }
}
